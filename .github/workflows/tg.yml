name: Test the project and update the test-date

on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:
    inputs:
      mail:
        description: 'Choose the mail provider'
        required: true
        type: choice
        options:
          - 1secmail
          - guerrillamail
          - developermail
          - mailticking
          - fakemail
          - inboxes
          - incognitomail
          - emailfake
        default: emailfake
      user_chat_id:
        description: 'Telegram chat ID for notifications'
        required: false

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repo'
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      
      - name: 'Generate key and update the test time'
        id: generate
        run: |
          ACCOUNT=0
          KEY=1
          SMALL_BUSINESS_KEY=1
          VPN=0
          EMAIL_API="${{ github.event.inputs.mail }}"
          if [ -z "$EMAIL_API" ]; then
            EMAIL_API="emailfake"
          fi
          
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git clone --depth 1 https://github.com/rzc0d3r/ESET-KeyGen.git
          cd ESET-KeyGen
          
          # Setup env
          sudo apt update
          sudo apt install -y python3-pip python3-venv
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          
          # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π
          if [[ ${KEY} != 0 ]]; then
            for ((attempt=1;attempt<=${KEY};++attempt)); do
              python3 main.py --auto-detect-browser --key --email-api ${EMAIL_API} --skip-update-check --no-logo --disable-progress-bar --disable-logging
            done
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            echo "keys=$(cat ./*KEYS.txt 2>/dev/null || echo 'No keys generated')" >> $GITHUB_OUTPUT
          fi
          
          if [[ ${SMALL_BUSINESS_KEY} != 0 ]]; then
            for ((attempt=1;attempt<=${SMALL_BUSINESS_KEY};++attempt)); do
              python3 main.py --auto-detect-browser --small-business-key --email-api ${EMAIL_API} --skip-update-check --no-logo --disable-progress-bar --disable-logging
            done
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –±–∏–∑–Ω–µ—Å-–∫–ª—é—á–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            echo "sb_keys=$(cat ./*KEYS.txt 2>/dev/null || echo 'No business keys generated')" >> $GITHUB_OUTPUT
          fi
          
          cd ${{ github.workspace }}
          sed -i 's/\(last_test-\)[0-9]\{2\}.[0-9]\{2\}.[0-9]\{4\}_[0-9]\{2\}:[0-9]\{2\}_UTC+3/\1'"$(date -u --date='3 hours' +"%d.%m.%Y_%H:%M_UTC+3")"'/' README.md
          sudo rm -r ESET-KeyGen
          git pull
          git commit -m "Update test time" -a

      - name: Push changes to the repo
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT }}
          branch: ${{ github.ref }}
      
      - name: Send keys to user
        if: ${{ inputs.user_chat_id && (steps.generate.outputs.keys || steps.generate.outputs.sb_keys) }}
        run: |
          MESSAGE="üîë *Generated ESET Keys*:\n\n"
          
          if [[ "${{ steps.generate.outputs.keys }}" != "No keys generated" ]]; then
            MESSAGE+="*Standard Keys*:\n${{ steps.generate.outputs.keys }}\n\n"
          fi
          
          if [[ "${{ steps.generate.outputs.sb_keys }}" != "No business keys generated" ]]; then
            MESSAGE+="*Business Keys*:\n${{ steps.generate.outputs.sb_keys }}"
          fi
          
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ inputs.user_chat_id }}" \
            -d "text=$MESSAGE" \
            -d "parse_mode=Markdown"
