name: ESET Key Generator

on:
  workflow_dispatch:
    inputs:
      mail:
        description: 'Mail provider'
        required: true
        type: choice
        options:
          - 1secmail
          - guerrillamail
          - developermail
          - mailticking
          - fakemail
          - inboxes
          - incognitomail
          - emailfake
        default: emailfake
      user_chat_id:
        description: 'Telegram chat ID'
        required: true
      account:
        description: 'Number of accounts'
        required: true
        type: string
        default: '0'
      key:
        description: 'Number of keys'
        required: true
        type: string
        default: '1'
      key_type:
        description: 'Key type'
        required: true
        type: choice
        options:
          - --key
          - --small-business-key
        default: --key

jobs:
  generate:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone ESET-KeyGen
        shell: pwsh
        run: |
          git clone -b main https://github.com/XHub157/ESET-KeyGen
          cd ESET-KeyGen
          Remove-Item -Path .\*KEYS.txt -ErrorAction SilentlyContinue

      - name: Setup environment
        shell: pwsh
        run: |
          cd ESET-KeyGen
          python -m venv venv
          .\venv\Scripts\pip install -r requirements.txt

      - name: Generate keys
        id: generate
        shell: pwsh
        run: |
          cd ESET-KeyGen
          .\venv\Scripts\python main.py --auto-detect-browser ${{ inputs.key_type }} `
            --email-api "${{ inputs.mail }}" `
            --skip-update-check --no-logo `
            --disable-progress-bar --disable-logging `
            --repeat ${{ inputs.key }}
          
          $keyFile = Get-ChildItem -Path . -Filter "*KEYS.txt" | Select-Object -First 1
          if ($keyFile) {
            $KEY = Get-Content -Path $keyFile.FullName -Tail 1
            echo "key=$KEY" >> $env:GITHUB_OUTPUT
          }

      - name: Send key to Telegram
        shell: pwsh
        run: |
         cd ESET-KeyGen
         # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –±–ª–æ–∫ —Å –∫–ª—é—á–æ–º
         $content = Get-Content -Path .\ESET_KEYS.txt -Raw
         $pattern = 'License Key: (.+)\nLicense Out Date: (.+)\n-+'
         $match = [regex]::Match($content, $pattern)
         
         if ($match.Success) {
         $licenseKey = $match.Groups[1].Value
         $expiryDate = $match.Groups[2].Value
         $MESSAGE = @"
         üîê *–í–∞—à –∫–ª—é—á ESET*
         
         üõ°Ô∏è –õ–∏—Ü–µ–Ω–∑–∏—è: *ESET HOME Security Premium*
         üîë –ö–ª—é—á: `$licenseKey`
         üìÖ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: $expiryDate
         "@
         } else {
         $MESSAGE = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∫–ª—é—á –∏–∑ —Ñ–∞–π–ª–∞"
         }
         
         curl.exe -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" `
         -d "chat_id=${{ inputs.user_chat_id }}" `
         -d "text=$MESSAGE" `
         -d "parse_mode=Markdown"
      
