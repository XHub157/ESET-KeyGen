name: ESET Key Generation

on:
  workflow_dispatch:
    inputs:
      mail:
        description: 'Mail provider'
        required: true
        type: choice
        options:
          - 1secmail
          - guerrillamail
          - developermail
          - mailticking
          - fakemail
          - inboxes
          - incognitomail
          - emailfake
        default: emailfake
      user_chat_id:
        description: 'Telegram chat ID'
        required: true
      key_type:
        description: 'Key type'
        required: true
        type: choice
        options:
          - --key
          - --small-business-key
        default: --key

jobs:
  generate:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Clone ESET-KeyGen
        run: git clone -b main https://x-access-token:${{ secrets.GGIT }}@github.com/XHub157/ESET-KeyGen

      - name: Setup Python
        shell: pwsh
        run: |
          cd ESET-KeyGen
          python -m venv venv
          .\venv\Scripts\pip install -r requirements.txt

      - name: Generate Keys
        id: generate
        shell: pwsh
        run: |
          cd ESET-KeyGen
          $keyType = "${{ inputs.key_type }}"
          $emailApi = "${{ inputs.mail }}"
          
          .\venv\Scripts\python main.py --auto-detect-browser $keyType `
            --email-api $emailApi `
            --skip-update-check `
            --no-logo `
            --disable-progress-bar `
            --disable-logging
          
          $key = Get-Content -Path .\*KEYS.txt -ErrorAction SilentlyContinue | Select-Object -Last 1
          if (-not $key) { $key = "Не удалось сгенерировать ключ" }
          echo "key=$key" >> $env:GITHUB_OUTPUT

      - name: Send Key to Telegram
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ inputs.user_chat_id }}" \
            -d "text=🔑 Ваш ключ ESET:\n\n${{ steps.generate.outputs.key }}" \
            -d "parse_mode=Markdown"
