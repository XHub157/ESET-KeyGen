name: ESET Key Generator

on:
  workflow_dispatch:
    inputs:
      mail:
        description: 'Mail provider'
        required: true
        type: choice
        options:
          - 1secmail
          - guerrillamail
          - developermail
          - mailticking
          - fakemail
          - inboxes
          - incognitomail
          - emailfake
        default: emailfake
      user_chat_id:
        description: 'Telegram chat ID'
        required: true

jobs:
  generate:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone ESET-KeyGen
        shell: pwsh
        run: |
          git clone -b main https://github.com/XHub157/ESET-KeyGen
          cd ESET-KeyGen
          Remove-Item -Path .\*KEYS.txt -ErrorAction SilentlyContinue

      - name: Setup environment
        shell: pwsh
        run: |
          cd ESET-KeyGen
          python -m venv venv
          .\venv\Scripts\pip install -r requirements.txt

      - name: Generate keys
        id: generate
        shell: pwsh
        run: |
          cd ESET-KeyGen
          $output = .\venv\Scripts\python main.py --auto-detect-browser --key `
            --email-api "${{ inputs.mail }}" `
            --skip-update-check --no-logo `
            --disable-progress-bar --disable-logging *>&1 | Out-String
          
          # Сохраняем вывод в файл
          $output | Out-File -FilePath .\generation_output.txt -Encoding utf8
          
          # Извлекаем ключ и сохраняем в переменную
          $keyMatch = [regex]::Match($output, 'License Name: ESET HOME Security Premium License Key: ([A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4})')
          if ($keyMatch.Success) {
              echo "LICENSE_KEY=$($keyMatch.Groups[1].Value)" >> $env:GITHUB_ENV
          }

      - name: Extract and send key
        shell: pwsh
        run: |
          # Проверяем наличие ключа
          if (-not $env:LICENSE_KEY) {
              Write-Output "::error::Не удалось извлечь ключ из вывода"
              exit 1
          }
          
          # Формируем сообщение
          $messageText = "Ваш ключ ESET:\n\n``$env:LICENSE_KEY``"
          
          # Отправляем в Telegram
          $telegramUrl = "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
          $chatId = "${{ inputs.user_chat_id }}"
          
          curl.exe -X POST $telegramUrl `
            -d "chat_id=$chatId" `
            -d "text=$([System.Web.HttpUtility]::UrlEncode($messageText))" `
            -d "parse_mode=Markdown"
